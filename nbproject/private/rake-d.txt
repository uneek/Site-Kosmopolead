ci\:build=Migrate-and-test task suitable for continuous integration
ci\:configure=Create symlink to database.yml. Set DB_YAML_PATH to set the target of the link. Default is ../../shared/radiant/config/database.yml
cucumber=cucumber rake task not available (cucumber not installed)
db\:abort_if_pending_migrations=Raises an error if there are pending migrations / Raises an error if there are pending migrations
db\:bootstrap=Bootstrap your database for Radiant.
db\:charset=Retrieves the charset for the current environment's database / Retrieves the charset for the current environment's database
db\:collation=Retrieves the collation for the current environment's database / Retrieves the collation for the current environment's database
db\:create=Create the database defined in config/database.yml for the current RAILS_ENV / Create the database defined in config/database.yml for the current RAILS_ENV
db\:create\:all=Create all the local databases defined in config/database.yml / Create all the local databases defined in config/database.yml
db\:drop=Drops the database for the current RAILS_ENV / Drops the database for the current RAILS_ENV
db\:drop\:all=Drops all the local databases defined in config/database.yml / Drops all the local databases defined in config/database.yml
db\:fixtures\:identify=Search for a fixture given a LABEL or ID. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures. / Search for a fixture given a LABEL or ID. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures.
db\:fixtures\:load=Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y. Load from subdirectory in test/fixtures using FIXTURES_DIR=z. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures. / Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y. Load from subdirectory in test/fixtures using FIXTURES_DIR=z. Specify an alternative path (eg. spec/fixtures) using FIXTURES_PATH=spec/fixtures.
db\:load_config=
db\:migrate=Migrate the database through scripts in db/migrate and update db/schema.rb by invoking db:schema:dump. Target specific version with VERSION=x. Turn off output with VERBOSE=false. / Migrate the database through scripts in db/migrate and update db/schema.rb by invoking db:schema:dump. Target specific version with VERSION=x. Turn off output with VERBOSE=false.
db\:migrate\:down=Runs the "down" for a given migration VERSION. / Runs the "down" for a given migration VERSION.
db\:migrate\:extensions=Run all Radiant extension migrations
db\:migrate\:redo=Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x. Target specific version with VERSION=x. / Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x. Target specific version with VERSION=x.
db\:migrate\:reset=Resets your database using your migrations for the current environment / Resets your database using your migrations for the current environment
db\:migrate\:up=Runs the "up" for a given migration VERSION. / Runs the "up" for a given migration VERSION.
db\:remigrate=Migrate schema to version 0 and back up again. WARNING: Destroys all data in tables!!
db\:remigrate\:extensions=Migrate down and back up all Radiant extension migrations
db\:reset=Drops and recreates the database from db/schema.rb for the current environment and loads the seeds. / Drops and recreates the database from db/schema.rb for the current environment and loads the seeds.
db\:rollback=Rolls the schema back to the previous version. Specify the number of steps with STEP=n / Rolls the schema back to the previous version. Specify the number of steps with STEP=n
db\:schema\:dump=Create a db/schema.rb file that can be portably used against any DB supported by AR / Create a db/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database / Load a schema.rb file into the database
db\:seed=Load the seed data from db/seeds.rb / Load the seed data from db/seeds.rb
db\:sessions\:clear=Clear the sessions table / Clear the sessions table
db\:sessions\:create=Creates a sessions migration for use with ActiveRecord::SessionStore / Creates a sessions migration for use with ActiveRecord::SessionStore
db\:setup=Create the database, load the schema, and initialize with the seed data / Create the database, load the schema, and initialize with the seed data
db\:structure\:dump=Dump the database structure to a SQL file / Dump the database structure to a SQL file
db\:test\:clone=Recreate the test database from the current environment's database schema / Recreate the test database from the current environment's database schema
db\:test\:clone_structure=Recreate the test databases from the development structure / Recreate the test databases from the development structure
db\:test\:load=Recreate the test database from the current schema.rb / Recreate the test database from the current schema.rb
db\:test\:prepare=Check for pending migrations and load the test schema / Check for pending migrations and load the test schema
db\:test\:purge=Empty the test database / Empty the test database
db\:version=Retrieves the current schema version number / Retrieves the current schema version number
default=
development=Set the environment variable RAILS_ENV='development'.
doc=
doc/api=
doc/api/index.html=
doc/app=
doc/app/index.html=
doc\:app=Build the RDOC HTML Files / Build the RDOC HTML Files
doc\:clobber=
doc\:clobber_app=Remove rdoc products / Remove rdoc products
doc\:clobber_plugins=Remove plugin documentation / Remove plugin documentation
doc\:clobber_rails=Remove rdoc products / Remove rdoc products
doc\:guides=Generate Rails guides / Generate Rails guides
doc\:plugins=Generate documentation for all installed plugins / Generate documentation for all installed plugins
doc\:rails=Build the RDOC HTML Files / Build the RDOC HTML Files
doc\:reapp=Force a rebuild of the RDOC files / Force a rebuild of the RDOC files
doc\:rerails=Force a rebuild of the RDOC files / Force a rebuild of the RDOC files
environment=
gems=List the gems that this rails application depends on / List the gems that this rails application depends on
gems\:base=
gems\:build=Build any native extensions for unpacked gems / Build any native extensions for unpacked gems
gems\:build\:force=Force the build of all gems / Force the build of all gems
gems\:install=Installs all required gems. / Installs all required gems.
gems\:refresh_specs=Regenerate gem specifications in correct format. / Regenerate gem specifications in correct format.
gems\:unpack=Unpacks all required gems into vendor/gems. / Unpacks all required gems into vendor/gems.
gems\:unpack\:dependencies=Unpacks all required gems and their dependencies into vendor/gems. / Unpacks all required gems and their dependencies into vendor/gems.
log\:clear=Truncates all *.log files in log/ to zero bytes / Truncates all *.log files in log/ to zero bytes
middleware=Prints out your Rack middleware stack / Prints out your Rack middleware stack
notes=Enumerate all annotations / Enumerate all annotations
notes\:custom=Enumerate a custom annotation, specify with ANNOTATION=WTFHAX / Enumerate a custom annotation, specify with ANNOTATION=WTFHAX
notes\:fixme=Enumerate all FIXME annotations / Enumerate all FIXME annotations
notes\:optimize=Enumerate all OPTIMIZE annotations / Enumerate all OPTIMIZE annotations
notes\:todo=Enumerate all TODO annotations / Enumerate all TODO annotations
pkg=
pkg/radiant-0.9.1=
pkg/radiant-0.9.1.gem=
pkg/radiant-0.9.1.tgz=
pkg/radiant-0.9.1.zip=
production=Set the environment variable RAILS_ENV='production'.
radiant\:clobber=
radiant\:config\:export=Export Radiant::Config to Rails.root/config/radiant_config.yml. Specify a path with RADIANT_CONFIG_PATH - defaults to Rails.root/config/radiant_config.yml
radiant\:config\:import=Import Radiant::Config from Rails.root/config/radiant_config.yml. Specify a path with RADIANT_CONFIG_PATH - defaults to Rails.root/config/radiant_config.yml Set CLEAR_CONFIG=true to delete all existing settings before import
radiant\:extensions=
radiant\:extensions\:archive\:migrate=Runs the migration of the Archive extension
radiant\:extensions\:archive\:update=Copies public assets of the Archive to the instance public/ directory.
radiant\:extensions\:de\:migrate=Runs the migration of the I18n De extension
radiant\:extensions\:de\:update=Copies public assets of the I18n De to the instance public/ directory.
radiant\:extensions\:fr\:migrate=Runs the migration of the I18n Fr extension
radiant\:extensions\:fr\:update=Copies public assets of the I18n Fr to the instance public/ directory.
radiant\:extensions\:it\:migrate=Runs the migration of the it language pack
radiant\:extensions\:it\:update=Copies public assets of the it language pack to the instance public/ directory.
radiant\:extensions\:ja\:migrate=Runs the migration of the I18n Ja extension
radiant\:extensions\:ja\:update=Copies public assets of the I18n Ja to the instance public/ directory.
radiant\:extensions\:markdown_filter\:migrate=Runs the migration of the Markdown Filter extension
radiant\:extensions\:markdown_filter\:update=Copies public assets of the Markdown Filter to the instance public/ directory.
radiant\:extensions\:nl\:migrate=Runs the migration of the I18n Nl extension
radiant\:extensions\:nl\:update=Copies public assets of the I18n Nl to the instance public/ directory.
radiant\:extensions\:ru\:migrate=Runs the migration of the I18n Ru extension
radiant\:extensions\:ru\:update=Copies public assets of the I18n Ru to the instance public/ directory.
radiant\:extensions\:smarty_pants_filter\:migrate=Runs the migration of the SmartyPants Filter extension
radiant\:extensions\:smarty_pants_filter\:update=Copies public assets of the SmartyPants Filter to the instance public/ directory.
radiant\:extensions\:update_all=Runs update asset task for all extensions
radiant\:freeze\:edge=Lock to latest Edge Radiant or a specific revision with REVISION=X (ex: REVISION=245484e), a tag with TAG=Y (ex: TAG=0.6.6), or a branch with BRANCH=Z (ex: BRANCH=mental)
radiant\:freeze\:gems=Lock this application to the current gems (by unpacking them into vendor/radiant)
radiant\:gem=Build the gem file radiant-0.9.1.gem
radiant\:gem\:install=Build and install Gem from source
radiant\:gem\:uninstall=Uninstall Gem
radiant\:gemspec=
radiant\:generate_cached_assets=Generates cached assets from source files
radiant\:i18n\:available_tags=Creates or updates the English available tag descriptions
radiant\:i18n\:sync=Syncs all available translations to the English master
radiant\:i18n\:sync_available_tags=Syncs all translations available_tags to the English master
radiant\:unfreeze=Unlock this application from freeze of gems or edge and return to a fluid use of system gems
radiant\:update=Update configs, scripts, sass, stylesheets and javascripts from Radiant.
radiant\:update\:cached_assets=Update the cached assets for the admin UI
radiant\:update\:configs=Update config/boot.rb from your current radiant install
radiant\:update\:images=Update admin images from your current radiant install
radiant\:update\:initializers=Update initializers from your current radiant install
radiant\:update\:javascripts=Update your javascripts from your current radiant install
radiant\:update\:sass=Update admin sass files from your current radiant install
radiant\:update\:scripts=Add new scripts to the instance script/ directory
radiant\:update\:stylesheets=Update admin stylesheets from your current radiant install
rails\:template=Applies the template supplied by LOCATION=/path/to/template / Applies the template supplied by LOCATION=/path/to/template
rails\:update\:application_controller=Rename application.rb to application_controller.rb / Rename application.rb to application_controller.rb
rails\:update\:generate_dispatchers=Generate dispatcher files in RAILS_ROOT/public / Generate dispatcher files in RADIANT_ROOT/public
rails_env=
routes=Print out all defined routes in match order, with names. Target specific controller with CONTROLLER=x. / Print out all defined routes in match order, with names. Target specific controller with CONTROLLER=x.
secret=Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions. / Generate a crytographically secure secret key. This is typically used to generate a secret for cookie sessions.
spec=
spec\:controllers=
spec\:db\:fixtures\:load=
spec\:extensions=Runs specs on all available Radiant extensions, pass EXT=extension_name to test a single extension
spec\:generators=
spec\:generators\:extension=
spec\:generators\:extension_controller=
spec\:generators\:extension_mailer=
spec\:generators\:extension_migration=
spec\:generators\:extension_model=
spec\:generators\:instance=
spec\:helpers=
spec\:integration=
spec\:lib=
spec\:models=
spec\:plugins=
spec\:plugins\:rspec_on_rails=
spec\:server\:restart=
spec\:server\:start=
spec\:server\:stop=
spec\:statsetup=
spec\:views=
spec_prereq=
stats=Report code statistics (KLOCs, etc) from the application / Report code statistics (KLOCs, etc) from the application
test=Run all unit, functional and integration tests / Run all unit, functional and integration tests
test\:benchmark=Run tests for benchmarkdb:test:prepare / Benchmark the performance tests / Run tests for benchmarkdb:test:prepare / Benchmark the performance tests
test\:extensions=Runs tests on all available Radiant extensions, pass EXT=extension_name to test a single extension
test\:functionals=Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional / Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional
test\:integration=Run tests for integrationdb:test:prepare / Run the integration tests in test/integration / Run tests for integrationdb:test:prepare / Run the integration tests in test/integration
test\:plugins=Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name) / Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)
test\:profile=Run tests for profiledb:test:prepare / Profile the performance tests / Run tests for profiledb:test:prepare / Profile the performance tests
test\:recent=Run tests for recentdb:test:prepare / Test recent changes / Run tests for recentdb:test:prepare / Test recent changes
test\:uncommitted=Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion and Git) / Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion and Git)
test\:units=Run tests for unitsdb:test:prepare / Run the unit tests in test/unit / Run tests for unitsdb:test:prepare / Run the unit tests in test/unit
time\:zones\:all=Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6 / Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
time\:zones\:local=Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time / Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time
time\:zones\:us=Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6 / Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset. Results can be filtered with optional OFFSET parameter, e.g., OFFSET=-6
